def func_main() {
  intr_en(zero)
  a = label_func_trap_handler
  intr_trap(a)
  func_vt100_mode()
  func_init_game()
  func_print_board()
  a = 1
  intr_en(a)
  halt()
}

def func_vt100_mode() {
  func_putchar(27)
  func_putchar(91)
  func_putchar(50)
  func_putchar(48)
  func_putchar(104)
}

def func_init_game() {
  push(a,b,i)
  for (i=0; i<16; i=i+1) {
    mem[i] = zero
  }
  a = 4093
  b = 16
  mem[b] = a
  func_add_new()
  pop(i,b,a)
}

def func_trap_handler() {
  push(a,b,c,d,e,i)
  a = keyboard()
  b = 1
  intr_ack(b)

  for (i=0; i<16; i=i+1) {
    c = mem[i]
    sp = sp - 1
    mem[sp] = c
  }

  if (a == 119) {
    func_move_up()
  }
  if (a == 115) {
    func_move_down()
  }
  if (a == 97) {
    func_move_left()
  }
  if (a == 100) {
    func_move_right()
  }

  e = 0
  for (i=15; i>=0; i=i-1) {
    c = mem[i]
    d = mem[sp]
    sp = sp + 1
    if (c != d) {
      e = 1
    }
  }

  if (e != 0) {
    func_init_if_game_over()
    func_add_new()
    func_print_board()
  }

  pop(i,e,d,c,b,a)
  iret()
}

def func_putchar() {
  push(a,b)
  b = 1
  for (;b == 1;) {
    b = monitor_busy()
  }
  monitor(a)
  pop(b,a)
}

def func_print_board() {
  push(a,b,c,d,e,i)
  func_print_line()
  
  for (i=0; i<4; i=i+1) {
    func_putchar(124)

    b = i << 2
    for (c=0; c<4; c=c+1) {
      func_putchar(32)

      d = b + c
      e = mem[d]
      a = e + 48
      if (e == 0) {
        a = 32
      }
      func_putchar()

      func_putchar(124)
    }
    func_putchar(10)
    func_print_line()
  }
  func_putchar(10)
  pop(i,e,d,c,b,a)
}

def func_print_line() {
  push(a,i)
  for (i=0; i<13; i=i+1) {
    func_putchar(45)
  }
  func_putchar(10)
  pop(i,a)
}

def func_add_new() {
  push(a,b,c,d,e,f)
  f = 1
  func_rand()
  for (b=0; b<16; b=b+1) {
    c = a + b
    d = 15
    d = c & d
    e = mem[d]
    if (e == 0) {
      mem[d] = f
      f = 0
    }
  }
  pop(f,e,d,c,b,a)
}

def func_init_if_game_over() {
  push(a,b,c)
  a = 1
  for (b=0; b<16; b=b+1) {
    c = mem[b]
    if (c == 0) {
      a = 0
    }
  }
  if (a == 1) {
    func_init_game()
  }
  pop(c,b,a)
}

def func_rand() {
  push(b,c)
  c = 16
  a = mem[c]

  b = a << 13
  a = a ^ b

  b = a >> 17
  a = a ^ b

  b = a << 5
  a = a ^ b

  mem[c] = a
  pop(c,b)
}

def func_compress() {
  push(a,b,c,d,e,f,h)
  for (a=0; a<4; a=a+1) {
    b = a << 2
    h = 0
    for (c=0; c<4; c=c+1) {
      d = b + c
      e = mem[d]
      if (e != 0) {
        f = b + h
        mem[f] = e
        if (h != c) {
          mem[d] = zero
        }
        h = h + 1
      }
    }
  }
  pop(h,f,e,d,c,b,a)
}

def func_merge() {
  push(a,b,c,d,e,f,g)
  for (a=0; a<4; a=a+1) {
    b = a << 2
    for (c=0; c<3; c=c+1) {
      d = b + c
      e = mem[d]
      if (e != 0) {
        f = d + 1
        g = mem[f]
        if (e == g) {
          e = e + 1
          mem[d] = e
          mem[f] = zero
        }
      }
    }
  }
  pop(g,f,e,d,c,b,a)
}

def func_reverse() {
  push(a,b,c,d,e,f,g)
  for (a=0; a<4; a=a+1) {
    b = a << 2
    for (c=0; c<2; c=c+1) {
      d = b + c
      e = mem[d]
      f = b - c
      f = f + 3
      g = mem[f]
      mem[d] = g
      mem[f] = e
    }
  }
  pop(g,f,e,d,c,b,a)
}

def func_transpose() {
  push(a,b,c,d,e,f,g)
  for (a=0; a<4; a=a+1) {
    b = a << 2
    for (c=0; c<4; c=c+1) {
      if (a < c) {
        d = b + c
        e = mem[d]
        f = c << 2
        f = f + a
        g = mem[f]
        mem[d] = g
        mem[f] = e
      }
    }
  }
  pop(g,f,e,d,c,b,a)
}

def func_move_left() {
  func_compress()
  func_merge()
  func_compress()
}

def func_move_right() {
  func_reverse()
  func_move_left()
  func_reverse()
}

def func_move_up() {
  func_transpose()
  func_move_left()
  func_transpose()
}

def func_move_down() {
  func_transpose()
  func_move_right()
  func_transpose()
}
